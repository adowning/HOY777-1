/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register a new user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        username: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description User created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            username: string;
                            avatar: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description User already exists */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Log in a user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        username: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Login successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            accessToken: string;
                            refreshToken: string;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Invalid credentials */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current user session */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the current user session */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                id: string;
                                username: string;
                                avatar: string | null;
                                createdAt: string | null;
                                updatedAt: string | null;
                            } | null;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Log out the current user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Logout successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            accessToken: string;
                            refreshToken: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/updates/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Check for a new application version (BINARY or OTA) */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        currentVersion: string;
                        platform: string;
                        appId: string;
                        /** @enum {string} */
                        updateType: "BINARY" | "OTA";
                    };
                };
            };
            responses: {
                /** @description Update check result */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            hasUpdate: boolean;
                            version?: string;
                            platform?: string;
                            /** @enum {string} */
                            updateType?: "BINARY" | "OTA";
                            /** Format: uri */
                            downloadUrl?: string;
                            changelog?: string[];
                            mandatory?: boolean;
                            /** Format: date-time */
                            releaseDate?: string;
                            fileSize?: number;
                            checksum?: string;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/updates/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload a new application version (APK or OTA bundle) */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": unknown;
                };
            };
            responses: {
                /** @description Upload success response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            version?: {
                                version: string;
                                platform: string;
                                /** @enum {string} */
                                updateType: "BINARY" | "OTA";
                                /** Format: uri */
                                downloadUrl: string;
                                changelog: string[];
                                mandatory: boolean;
                                /** Format: date-time */
                                releaseDate: string;
                                fileSize: number;
                                checksum: string;
                            };
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/updates/download/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Download an update file (for local development only) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Application file (APK or ZIP) */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/updates/versions/{appId}/{platform}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all available versions for an app and platform */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    appId: string;
                    platform: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of versions */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            appId: string;
                            platform: string;
                            versions: {
                                version: string;
                                platform: string;
                                /** @enum {string} */
                                updateType: "BINARY" | "OTA";
                                /** Format: uri */
                                downloadUrl: string;
                                changelog: string[];
                                mandatory: boolean;
                                /** Format: date-time */
                                releaseDate: string;
                                fileSize: number;
                                checksum: string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/operators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all operators */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns a list of operators */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            operatorSecret: string;
                            operatorAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        }[];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create a new operator */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        id: string;
                        name: string;
                        operatorSecret: string;
                        operatorAccess: string;
                        callbackUrl: string;
                        ips: string[];
                        description?: string | null;
                        lastUsedAt?: string | null;
                        updatedAt: string | null;
                        ownerId?: string | null;
                        acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                    };
                };
            };
            responses: {
                /** @description Returns the created operator */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            operatorSecret: string;
                            operatorAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/operators/myoperator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a operator for Current User */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the operator */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            operatorSecret: string;
                            operatorAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Operator not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/operators/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a operator by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the operator */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            operatorSecret: string;
                            operatorAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Operator not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Delete a operator by ID */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Operator deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Operator not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a operator by ID */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        operatorSecret?: string;
                        operatorAccess?: string;
                        callbackUrl?: string;
                        active?: boolean;
                        ips?: string[];
                        description?: string | null;
                        lastUsedAt?: string | null;
                        createdAt?: string | null;
                        updatedAt?: string | null;
                        ownerId?: string | null;
                        acceptedPayments?: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                    };
                };
            };
            responses: {
                /** @description Returns the updated operator */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            operatorSecret: string;
                            operatorAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid input data or ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Operator not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/jackpots/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current jackpot statistics */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response with jackpot stats */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            totalPoolCoins: number;
                            totalPoolDollars: number;
                            jackpots: {
                                type: string;
                                currentAmountCoins: number;
                                currentAmountDollars: number;
                                lastWonAt: string | null;
                                lastWinnerUsername: string | null;
                            }[];
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jackpots/recent-wins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the most recent jackpot wins */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of recent jackpot wins */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            winAmountCoins: number;
                            jackpot: {
                                type: string;
                            };
                            winner: {
                                username: string;
                                avatar: string | null;
                            };
                        }[];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jackpots/my-contributions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the current authenticated user's jackpot contributions */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of the user's contributions */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            contributionAmountCoins: number;
                            jackpot: {
                                type: string;
                            };
                        }[];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jackpots/my-wins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the current authenticated user's jackpot wins */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of the user's wins */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            winAmountCoins: number;
                            jackpot: {
                                type: string;
                            };
                        }[];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jackpots/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a specific jackpot by its ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description The jackpot object */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
                /** @description Jackpot not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all games */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns a list of games */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            title: string;
                            goldsvetData?: unknown;
                            description?: string | null;
                            /** @enum {string} */
                            category: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                            tags: string[];
                            isActive: boolean;
                            thumbnailUrl?: string | null;
                            bannerUrl?: string | null;
                            meta?: unknown;
                            createdAt: string | null;
                            updatedAt: string | null;
                            featured: boolean;
                            /** @enum {string} */
                            providerName: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                            totalWagered: number;
                            totalWon: number;
                            gameProviderId: string | null;
                            operatorId: string | null;
                            tournamentDirectives?: unknown;
                            status: boolean;
                            checked: boolean;
                            targetRtp?: number | null;
                        }[];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create a new game */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        title: string;
                        goldsvetData?: unknown;
                        description?: string | null;
                        /** @enum {string} */
                        category: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                        tags: string[];
                        thumbnailUrl?: string | null;
                        bannerUrl?: string | null;
                        meta?: unknown;
                        /** @enum {string} */
                        providerName: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                        gameProviderId: string | null;
                        operatorId: string | null;
                        tournamentDirectives?: unknown;
                        targetRtp?: number | null;
                    };
                };
            };
            responses: {
                /** @description Returns the created game */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            title: string;
                            goldsvetData?: unknown;
                            description?: string | null;
                            /** @enum {string} */
                            category: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                            tags: string[];
                            isActive: boolean;
                            thumbnailUrl?: string | null;
                            bannerUrl?: string | null;
                            meta?: unknown;
                            createdAt: string | null;
                            updatedAt: string | null;
                            featured: boolean;
                            /** @enum {string} */
                            providerName: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                            totalWagered: number;
                            totalWon: number;
                            gameProviderId: string | null;
                            operatorId: string | null;
                            tournamentDirectives?: unknown;
                            status: boolean;
                            checked: boolean;
                            targetRtp?: number | null;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/games/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a game by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the game */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            title: string;
                            goldsvetData?: unknown;
                            description?: string | null;
                            /** @enum {string} */
                            category: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                            tags: string[];
                            isActive: boolean;
                            thumbnailUrl?: string | null;
                            bannerUrl?: string | null;
                            meta?: unknown;
                            createdAt: string | null;
                            updatedAt: string | null;
                            featured: boolean;
                            /** @enum {string} */
                            providerName: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                            totalWagered: number;
                            totalWon: number;
                            gameProviderId: string | null;
                            operatorId: string | null;
                            tournamentDirectives?: unknown;
                            status: boolean;
                            checked: boolean;
                            targetRtp?: number | null;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Game not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Delete a game by ID */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Game deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Game not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a game by ID */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        title?: string;
                        goldsvetData?: unknown;
                        description?: string | null;
                        /** @enum {string} */
                        category?: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                        tags?: string[];
                        isActive?: boolean;
                        thumbnailUrl?: string | null;
                        bannerUrl?: string | null;
                        meta?: unknown;
                        createdAt?: string | null;
                        featured?: boolean;
                        /** @enum {string} */
                        providerName?: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                        totalWagered?: number;
                        totalWon?: number;
                        gameProviderId?: string | null;
                        operatorId?: string | null;
                        tournamentDirectives?: unknown;
                        status?: boolean;
                        checked?: boolean;
                        targetRtp?: number | null;
                    };
                };
            };
            responses: {
                /** @description Returns the updated game */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            title: string;
                            goldsvetData?: unknown;
                            description?: string | null;
                            /** @enum {string} */
                            category: "FISH" | "POKER" | "SLOTS" | "TABLE_GAMES" | "LIVE_CASINO" | "SPORTSBOOK" | "VIRTUAL_SPORTS" | "LOTTERY" | "CRASH" | "OTHER";
                            tags: string[];
                            isActive: boolean;
                            thumbnailUrl?: string | null;
                            bannerUrl?: string | null;
                            meta?: unknown;
                            createdAt: string | null;
                            updatedAt: string | null;
                            featured: boolean;
                            /** @enum {string} */
                            providerName: "PRAGMATICPLAY" | "EVOPLAY" | "NETENT" | "PLAYNGO" | "RELAXGAMING" | "HACKSAW" | "BGAMING" | "SPRIBE" | "INTERNAL" | "REDTIGER" | "NETGAME" | "BIGFISHGAMES" | "CQNINE" | "NOLIMIT" | "KICKASS";
                            totalWagered: number;
                            totalWon: number;
                            gameProviderId: string | null;
                            operatorId: string | null;
                            tournamentDirectives?: unknown;
                            status: boolean;
                            checked: boolean;
                            targetRtp?: number | null;
                        };
                    };
                };
                /** @description Invalid input data or ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Game not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/sessions/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Start a new game session */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        gameId: string;
                    };
                };
            };
            responses: {
                /** @description Returns the created sessionData */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            userId: string;
                            gameId: string;
                            gameName?: string | null;
                            startedAt: string | null;
                            updatedAt: string | null;
                            endTime?: string | null;
                            isActive: boolean;
                            totalWagered: number;
                            totalWon: number;
                            rtp?: number | null;
                            /** @default false */
                            zeroNextSpin: boolean;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sessions/end": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** End the current game session */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Session ended successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description User not authenticated */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sessions/spin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Record a game spin */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        gameName: string;
                        spinData?: unknown;
                    };
                };
            };
            responses: {
                /** @description Returns the created game spin */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            betAmount: number;
                            winAmount: number;
                            currency: string;
                            gameState: {
                                [key: string]: unknown;
                            };
                            metadata?: {
                                [key: string]: unknown;
                            };
                            sessionDataId: string;
                            updatedAt: string;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sessions/top-wins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get top 30 winning game spins */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns a list of the top 30 winning game spins */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            spinNumber: number;
                            betAmount: number;
                            winAmount: number;
                            currency: string;
                            gameState: {
                                [key: string]: unknown;
                            };
                            metadata?: {
                                [key: string]: unknown;
                            };
                            sessionDataId: string;
                            createdAt: string;
                            updatedAt: string;
                            sessionData: {
                                game: {
                                    name: string;
                                    thumbnailUrl: string | null;
                                };
                                user: {
                                    username: string;
                                    avatar: string | null;
                                };
                            };
                        }[];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/redtiger/games/rtg/platform/{gameSessionId}/{gameName}/game/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get redtiger settings for game */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    gameName: string;
                    gameSessionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": unknown;
                };
            };
            responses: {
                /** @description Returns the created redtiger */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            redtigerSecret: string;
                            redtigerAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/redtiger/games/rtg/platform/{gameSessionId}/{gameName}/game/spin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get redtiger spin results for game */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    gameName: string;
                    gameSessionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": unknown;
                };
            };
            responses: {
                /** @description Returns the created redtiger */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            redtigerSecret: string;
                            redtigerAccess: string;
                            callbackUrl: string;
                            active: boolean;
                            ips: string[];
                            description?: string | null;
                            lastUsedAt?: string | null;
                            createdAt: string | null;
                            updatedAt: string | null;
                            ownerId?: string | null;
                            acceptedPayments: ("INSTORE_CASH" | "INSTORE_CARD" | "CASH_APP")[];
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/vipInfos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a new vipInfo */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        userId?: string | null;
                        dailyBonusClaimedAt?: string | null;
                        weeklyBonusClaimedAt?: string | null;
                        monthlyBonusClaimedAt?: string | null;
                    };
                };
            };
            responses: {
                /** @description Returns the created vipInfo */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            userId?: string | null;
                            level: number;
                            currentLevelXp: number;
                            totalXp: number;
                            dailyBonusClaimedAt?: string | null;
                            weeklyBonusClaimedAt?: string | null;
                            monthlyBonusClaimedAt?: string | null;
                            cashbackPercentage: number;
                        };
                    };
                };
                /** @description Invalid input data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/vipInfos/myvip": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get vipInfo for Current User */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the vipInfo */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            userId?: string | null;
                            level: number;
                            currentLevelXp: number;
                            totalXp: number;
                            dailyBonusClaimedAt?: string | null;
                            weeklyBonusClaimedAt?: string | null;
                            monthlyBonusClaimedAt?: string | null;
                            cashbackPercentage: number;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description VipInfo not found fool */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/vipInfos/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a vipInfo by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Returns the vipInfo */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            userId?: string | null;
                            level: number;
                            currentLevelXp: number;
                            totalXp: number;
                            dailyBonusClaimedAt?: string | null;
                            weeklyBonusClaimedAt?: string | null;
                            monthlyBonusClaimedAt?: string | null;
                            cashbackPercentage: number;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description VipInfo not found joka */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Delete a vipInfo by ID */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description VipInfo deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                        };
                    };
                };
                /** @description Invalid ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description VipInfo not found homie */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a vipInfo by ID */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        createdAt?: string | null;
                        userId?: string | null;
                        level?: number;
                        currentLevelXp?: number;
                        totalXp?: number;
                        dailyBonusClaimedAt?: string | null;
                        weeklyBonusClaimedAt?: string | null;
                        monthlyBonusClaimedAt?: string | null;
                        cashbackPercentage?: number;
                    };
                };
            };
            responses: {
                /** @description Returns the updated vipInfo */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            createdAt: string | null;
                            updatedAt: string | null;
                            userId?: string | null;
                            level: number;
                            currentLevelXp: number;
                            totalXp: number;
                            dailyBonusClaimedAt?: string | null;
                            weeklyBonusClaimedAt?: string | null;
                            monthlyBonusClaimedAt?: string | null;
                            cashbackPercentage: number;
                        };
                    };
                };
                /** @description Invalid input data or ID format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description VipInfo not found sucka */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
